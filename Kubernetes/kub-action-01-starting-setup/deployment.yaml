apiVersion: apps/v1  #  Must have a version -> search on google to find examples
kind: Deployment     #  Type kubernetes object want to create (Service, Job....)
metadata:
  name: second-app-deployment   # deployment name -> you choise the name
  labels:
    group: example
spec: # spec to Deployment
  replicas: 1 # Quantity PODs will have with same container
  selector: # Identify all PODs that application can controll by selector
    matchLabels:  # Identify by app and tier name whats PODs will be controll by this Deployment -> The Pods must have this app and tier names
      app: second-app
      tier: backend
    # matchExpressions:
    #  - {key: app, operator: In, values: [second-app, first-app]} 
  template:
    #kind: Pod -> Isnt neccessary because the template will be a POD to kind: Deployment   
    metadata: 
      labels: # The labels you choise the names 
        app: second-app
        tier: backend
    spec: # spec to the PODs    
      containers: 
        - name: second-node # -> you choise the name container
          image: leonardosuave/kub-first-deploy:2 # image from docker hub with application; :lastest will pull newest image
        # - name: second-node # -> you choise the name container
        #  image:
          imagePullPolicy: Always # Will pull newest image when image dont have tag specific
          livenessProbe:  # The way that container is verify by POD to see if is installed and working
            httpGet:
              path: /
              port: 8080
            periodSeconds: 10 # frequency that execute this
            initialDelaySeconds: 5 # time to verify the first time